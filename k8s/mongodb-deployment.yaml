apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/mongo-network: "true"
        io.kompose.service: mongodb
    spec:
      containers:
        - env:
            - name: MONGO_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MONGO_DATABASE
                  name: env-mongo-env
            - name: MONGO_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGO_PASSWORD
                  name: env-mongo-env
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  key: MONGO_PORT
                  name: env-mongo-env
            - name: MONGO_ROLE
              valueFrom:
                configMapKeyRef:
                  key: MONGO_ROLE
                  name: env-mongo-env
            - name: MONGO_USER
              valueFrom:
                configMapKeyRef:
                  key: MONGO_USER
                  name: env-mongo-env
          image: mongo:latest
          name: mongodb-micro-boots
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/mongodb
              name: mongodb-claim0
      restartPolicy: Always
      volumes:
        - name: mongodb-claim0
          persistentVolumeClaim:
            claimName: mongodb-claim0
status: {}
